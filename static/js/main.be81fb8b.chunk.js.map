{"version":3,"sources":["assets/noPosterSmall.png","Components/Loader.js","Components/Message.js","Routes/Detail/DetailPresenter.js","api.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Section.js","Components/Poster.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Span","span","Loader","role","aria-label","Text","props","color","Message","text","BackDrop","bgImage","Content","Cover","bgUrl","Data","Title","h2","ItemContainer","Item","Divider","Homepage","a","Overview","p","Video","iframe","DetailPresenter","result","error","loading","console","log","Helmet","original_name","original_title","backdrop_path","poster_path","require","default","first_air_date","substring","release_date","runtime","episode_run_time","genres","map","item","index","length","name","spoken_languages","homepage","href","overview","videos","results","src","key","controls","api","axios","create","baseURL","params","tvApi","get","term","query","encodeURIComponent","id","append_to_response","moviesApi","DetailContainer","pathname","location","state","isMovie","includes","this","match","push","history","parseId","parseInt","isNaN","data","setState","videokey","React","Component","Grid","Section","title","children","Image","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","to","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","movie","vote_average","tv","SearchContainer","event","preventDefault","searchByTerm","inputTerm","target","section","TVPresenter","popular","topRated","airingToday","TVContainer","componentDidMount","HomePresenter","nowPlaying","upcoming","HomeContainer","Menuheader","header","List","ul","li","current","Slink","Link","withRouter","Router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be81fb8b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.fb9c55b0.png\";","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100%;\r\n    height:100vh;\r\n`\r\n\r\nconst Span = styled.span`\r\n    position:absolute;\r\n    top: 10%;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    font-size: 30px;\r\n`\r\n\r\n\r\n\r\nconst Loader = ()=> <Container><Span role=\"img\" aria-label=\"loading\">⌛</Span></Container>\r\n\r\nexport default Loader;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 50px);\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst BackDrop = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: url(${(props) => props.bgImage}) no-repeat center center;\r\n  background-size:cover;\r\n  filter: blur(3px);\r\n  opacity: 0.4;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display: flex;\r\n    width:100%;\r\n    height: 100%;\r\n`\r\n\r\nconst Cover = styled.div`\r\n    width:30%;\r\n    height:100%;\r\n    background: url(${props => props.bgUrl}) no-repeat center center;\r\n    background-size: cover;\r\n    border-radius:20px;\r\n    z-index:1;\r\n`\r\n\r\nconst Data= styled.div`\r\n    width: 70%;\r\n    margin-left: 30px;\r\n    z-index:1\r\n`\r\n\r\nconst Title = styled.h2`\r\n    font-size: 40px;\r\n`\r\n\r\nconst ItemContainer = styled.div`\r\n    width: 100%;\r\n    margin: 20px 0px;\r\n`\r\n\r\nconst Item = styled.span`\r\n    font-size: 15px;\r\n`\r\n\r\nconst Divider = styled.span`\r\n  margin: 0px 10px;\r\n`\r\n\r\nconst Homepage = styled.a`\r\n  display:block;\r\n  font-size: 14px;\r\n  margin-bottom:20px;\r\n  color: #f5f6fa;\r\n  opacity: 0.6\r\n`\r\n\r\nconst Overview = styled.p`\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  text-align: justify;\r\n  opacity:0.8;\r\n  margin-bottom: 50px;\r\n\r\n`\r\n\r\nconst Video = styled.iframe`\r\n  width: 60%;\r\n  min-width: 600px;\r\n  height: 400px;\r\n  z-index:111111111;\r\n`\r\n\r\n\r\n\r\nfunction DetailPresenter({ result, error, loading }) {\r\n  console.log(result)\r\n  if(loading) {\r\n      return (\r\n        <>\r\n          <Helmet>\r\n            <title>Loading | Nomflix</title>\r\n          </Helmet>\r\n          <Loader />\r\n        </>\r\n      )\r\n  } else { \r\n      return (\r\n        <>\r\n            <Container>\r\n                <Helmet>\r\n                  <title>{result.original_name ? result.original_name : result.original_title} | Nomflix</title>\r\n                </Helmet>\r\n                <BackDrop\r\n                    bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n                />\r\n                <Content>\r\n                    <Cover bgUrl={result.poster_path ? `https://image.tmdb.org/t/p/w500${result.poster_path}` :  require(\"assets/noPosterSmall.png\").default }></Cover>\r\n                    <Data>\r\n                      <Title>{result.original_name ? result.original_name : result.original_title}</Title>\r\n                      <ItemContainer>\r\n                        <Item>{result.first_air_date ? result.first_air_date.substring(0,4) : result.release_date.substring(0,4) }</Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>{result.runtime ? `${result.runtime} min` : `${result.episode_run_time} Min`}</Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>{result.genres && result.genres.map((item,index) => index === result.genres.length -1 ? item.name : `${item.name} / `)}</Item>\r\n                        <Divider>•</Divider>\r\n                        <Item>Language : {result.spoken_languages && result.spoken_languages.map((item,index) => index === result.spoken_languages.length -1 ? item.name : `${item.name} / `)}</Item>\r\n                      </ItemContainer>\r\n                      {result.homepage ?  <Homepage href={result.homepage}>Official Website: {result.homepage}</Homepage> : <Homepage></Homepage>}\r\n                      <Overview>{result.overview}</Overview>\r\n                      {result.videos && result.videos.results.length !== 0 ? <Video src={`https://www.youtube.com/embed/${result.videos.results[0].key}?autoplay=2&origin=http://localhost:3000`} controls /> : <></>}\r\n                    </Data>\r\n                </Content>\r\n            </Container>\r\n            {error && <Message color=\"#d35400\" text=\"Can't find Information of selected Show\" /> }\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import axios from 'axios';\r\n\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        \"api_key\": \"98e69d9bfaf2f8b110e14d65918d729a\",\r\n        \"language\": \"en-US\"\r\n    }\r\n});\r\n\r\n\r\n// use relative url instead of absolute url(\"/tv/popular\")\r\n// api.get(\"tv/popular\").then((response) => console.log(response.data.results))\r\n\r\n// 각 url을 담은 object를 내보낸다. \r\nexport const tvApi = {\r\n    popular: ()=> api.get(\"tv/popular\"),\r\n    topRated: ()=> api.get(\"tv/top_rated\"),\r\n    airingToday: ()=> api.get(\"tv/airing_today\"),\r\n    search: (term)=> api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    }),\r\n    tvDetail : id => api.get(`tv/${id}`, {\r\n        params : {\r\n            append_to_response: 'videos'\r\n        }\r\n    })\r\n}\r\n\r\nexport const moviesApi ={\r\n    nowPlaying: ()=> api.get(\"movie/now_playing\"),\r\n    popular: ()=> api.get(\"movie/popular\"),\r\n    upcoming: ()=> api.get(\"movie/upcoming\"),\r\n    search: (term)=> api.get(\"search/movie\", {\r\n        params : {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    }),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params : {\r\n            append_to_response: 'videos'\r\n        }\r\n    })\r\n}\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport axios from 'axios';\r\nimport {tvApi, moviesApi} from \"api\";\r\n\r\n\r\nclass DetailContainer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const {location: {pathname}} = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie :  pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // const {history: {push}}=this.props;\r\n        const {match :{ params: {id}}, history :{push}}=this.props;\r\n        console.log(this.props)\r\n        const parseId = parseInt(id)\r\n        // 만약 id가 숫자가 아니면 홈으로 \r\n        if(isNaN(parseId)){\r\n            return push(\"/\");\r\n        }\r\n\r\n        const { isMovie } = this.state;\r\n        let result = null;\r\n\r\n        try {\r\n            if(isMovie) {\r\n                // const request = await moviesApi.movieDetail(parseId);\r\n                // result = request.data;\r\n                ({ data : result} = await moviesApi.movieDetail(parseId));\r\n            } else {\r\n                ({data : result} = await tvApi.tvDetail(parseId));\r\n            }\r\n            \r\n\r\n        } catch {\r\n            this.setState({error: \"Can't find Selected Movie/TV information\"})\r\n        } finally{\r\n            this.setState({loading: false, result : result})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {result, error, loading, videokey} = this.state;\r\n        console.log(videokey);\r\n        return <DetailPresenter result={result} error={error} loading={loading}/>\r\n    }\r\n}\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom: 50px;\r\n    }\r\n`\r\n\r\nconst Title = styled.span`\r\n    font-size: 14px;\r\n    font-weight:600;\r\n`\r\n\r\nconst Grid = styled.div`\r\n    margin-top: 25px;\r\n    display:grid;\r\n    grid-template-columns: repeat(auto-fill, 200px);\r\n    grid-gap: 25px;\r\n`\r\n\r\n// children is reserved react prop\r\nfunction Section({title, children}){\r\n    console.log(title, children)\r\n    return(\r\n        <Container>\r\n            <Title>{title}</Title>\r\n            <Grid>{children}</Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\r\n}\r\n\r\nexport default Section;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 300px;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  border-radius: 5px;\r\n  transition: opacity 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  display: none;\r\n  position: absolute;\r\n  right: 5px;\r\n  top: 10px;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w200${imageUrl}`\r\n              : require(\"assets/noPosterSmall.png\").default\r\n          }\r\n        ></Image>\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n          {title.length > 30 ? `${title.substring(0, 30)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px 20px;\r\n`;\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Nomflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        ></Input>\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {tvResults.map((tv) => (\r\n                <Poster\r\n                id={tv.id}\r\n                key={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n              ))}\r\n            </Section>\r\n          )}\r\n        </>\r\n      )}\r\n      {error && <Message color=\"#e74c3c\" text={error} />}\r\n      {tvResults &&\r\n        movieResults &&\r\n        tvResults.length === 0 &&\r\n        movieResults.length === 0 && (\r\n          <Message color=\"#7f8c8d\" text=\"Nothing Found\" />\r\n        )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport {moviesApi, tvApi} from \"api\";\r\n\r\nclass SearchContainer extends React.Component{\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n    }\r\n\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }    \r\n    };\r\n\r\n    updateTerm = (event)=>{\r\n        // const inputTerm = event.target.value;\r\n        const { target: {value : inputTerm} } = event;\r\n        this.setState({searchTerm: inputTerm});\r\n    }\r\n\r\n    \r\n    async searchByTerm() {\r\n        const {searchTerm} = this.state;\r\n        this.setState({loading: true});\r\n        try{\r\n            const {data: {results : movieResults}} = await moviesApi.search(searchTerm);\r\n            const {data: {results : tvResults}} = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults : movieResults,\r\n                tvResults : tvResults\r\n            });\r\n        }catch{\r\n            this.setState({error: \"Can't Find Results\"})\r\n        }finally{\r\n            this.setState({loading:false})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {movieResults, tvResults, searchTerm, loading,error} = this.state;\r\n        return <SearchPresenter movieResults={movieResults} tvResults={tvResults} searchTerm={searchTerm} loading={loading} error={error} handleSubmit={this.handleSubmit} updateTerm={this.updateTerm}/>\r\n    }\r\n}\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.section`\r\n  padding: 20px 20px;\r\n`;\r\n\r\nfunction TVPresenter({ popular, topRated, airingToday, error, loading }) {\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n        <title>Loading | Nomflix </title>\r\n        </Helmet>\r\n        <Loader />;\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <Helmet>\r\n          <title>TV Shows | Nomflix</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((tv) => (\r\n              <Poster\r\n                id={tv.id}\r\n                key={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"TV Shows\">\r\n            {popular.map((tv) => (\r\n              <Poster\r\n                id={tv.id}\r\n                key={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map((tv) => (\r\n              <Poster\r\n                id={tv.id}\r\n                key={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={tv.first_air_date && tv.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nTVPresenter.propTypes = {\r\n  popular: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport {tvApi} from \"api\";\r\nclass TVContainer extends React.Component {\r\n  state = {\r\n    popular: null,\r\n    topRated: null,\r\n    airingToday: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    try{\r\n      const {data : {results : popular}} = await tvApi.popular(); \r\n      const {data : {results : topRated}} = await tvApi.topRated();\r\n      const {data : {results: airingToday}} = await tvApi.airingToday();\r\n      this.setState({\r\n        popular: popular,\r\n        topRated: topRated,\r\n        airingToday: airingToday\r\n      })\r\n    } catch {\r\n      this.setState({error: \"Can't find TV Show information\"})\r\n    } finally{\r\n      this.setState({loading: false});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { popular, topRated, airingToday, error, loading } = this.state;\r\n\r\n    return (\r\n      <TVPresenter\r\n        popular={popular}\r\n        topRated={topRated}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.section`\r\n  padding: 20px 20px;\r\n`;\r\n\r\n// const HomePresnter = ({nowPlaying, popular, upcoming, error, loading})=> loading ? null : <Container></Container>\r\nfunction HomePresenter({ nowPlaying, popular, upcoming, error, loading }) {\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n        <title>Loading | Nomflix </title>\r\n        </Helmet>\r\n        <Loader />;\r\n      </>\r\n    )\r\n    \r\n  } else {\r\n    return (\r\n      <Container>\r\n          <Helmet>\r\n            <title>Movies | Nomflix </title>\r\n          </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map((movie) => (\r\n              <Poster \r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map((movie) => (\r\n              <Poster \r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date && movie.release_date.substring(0,4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport {moviesApi} from \"api\";\r\n\r\nclass HomeContainer extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        popular: null,\r\n        upcoming: null,\r\n        error: null,\r\n        loading: true,\r\n    };\r\n\r\n    async componentDidMount() {\r\n        // API request \r\n        try {\r\n            //  const nowplayiong = await moviesApi.nowPlaying();\r\n            //  nowPlaying.data.results\r\n            const {data : {results : nowPlaying}} = await moviesApi.nowPlaying();\r\n            const {data: {results : upcoming}} = await moviesApi.upcoming();\r\n            const {data: {results : popular}} = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying: nowPlaying,\r\n                upcoming: upcoming,\r\n                popular: popular\r\n            });\r\n        } catch {\r\n            this.setState({error: \"Can't Find Movie Information\"})\r\n        } finally {\r\n            this.setState({loading: false});\r\n        }\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n    const { nowPlaying, popular, upcoming, error, loading } = this.state;\r\n    console.log(nowPlaying)\r\n    return (\r\n        <HomePresenter\r\n            nowPlaying={nowPlaying}\r\n            upcoming={upcoming}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n        />\r\n    );\r\n}\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nconst Menuheader = styled.header`\r\n    width: 100%;\r\n    height: 50px;\r\n    position:fixed;\r\n    top: 0px;\r\n    left: 0px;\r\n    background-color: rgba(20,20,20, 0.8);\r\n    box-shadow: 0px 1px 3px 2px rgba(0,0,0, 0.8);\r\n    z-index: 1111;\r\n`;\r\nconst List = styled.ul`\r\n    display:flex;\r\n    height: 100%;\r\n`;\r\n\r\n\r\nconst Item = styled.li`\r\n    width: 80px;\r\n    border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n    transition: border-bottom 0.4s ease-in-out;\r\n`;\r\n\r\nconst Slink = styled(Link)`\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nfunction Header(props){\r\n    // props.location.pathname\r\n    const { location : {pathname}} = props;\r\n    // console.log(props)\r\n    return (\r\n    <Menuheader>\r\n        <List>\r\n            <Item current={pathname === \"/\" }>\r\n                <Slink to='/'>Movies</Slink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\" }>\r\n                <Slink to='/tv'>TV</Slink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\" }>\r\n                <Slink to='/search'>Search</Slink>\r\n            </Item>\r\n        </List>\r\n    </Menuheader>\r\n    )\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport {HashRouter, Route, Redirect, Switch } from 'react-router-dom';\r\nimport Detail from 'Routes/Detail';\r\nimport Search from 'Routes/Search';\r\nimport TV from 'Routes/TV';\r\nimport Home from 'Routes/Home';\r\nimport Header from \"Components/Header\";\r\n\r\nfunction Router(){\r\n    return(\r\n        <HashRouter>\r\n            <>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path=\"/\" exact={true} component={Home}/>\r\n                    <Route path=\"/tv\"  component={TV}/>\r\n                    <Route path=\"/search\"  component={Search}/>\r\n                    <Route path=\"/movie/:id\"  component={Detail} />\r\n                    <Route path=\"/show/:id\" component={Detail} />\r\n                    <Redirect from=\"*\" to=\"/\" />\r\n                </Switch>\r\n            </>\r\n        </HashRouter>\r\n    )\r\n}\r\n\r\nexport default Router;","import { createGlobalStyle } from 'styled-components';\r\nimport reset from 'styled-reset'\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a {\r\n        text-decoration: none;\r\n        color: inherit;\r\n    }\r\n    *{ \r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        font-family: --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size: 12px;\r\n        background-color: rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top: 50px;\r\n    }\r\n`;\r\n\r\n\r\nexport default globalStyles;","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}